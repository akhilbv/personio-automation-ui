plugins {
    id 'java'
}

group 'personio'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.11


repositories {
    mavenCentral()
}

configurations {
    compile
}

dependencies {
    compile group: 'junit', name: 'junit', version: '4.12'

    // dependencies for selenium
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: "${seleniumVersion}"
    compile group: 'org.seleniumhq.selenium', name: 'selenium-server', version: "${seleniumVersion}"
    compile group: 'io.appium', name: 'java-client', version: '7.2.0'

    //dependencies for cucumber
    compile group: 'info.cukes', name: 'cucumber-core', version: "${cucumberVersion}"
    compile group: 'info.cukes', name: 'cucumber-java', version: "${cucumberVersion}"
    compile group: 'info.cukes', name: 'cucumber-testng', version: "${cucumberVersion}"
    compile group: 'info.cukes', name: 'cucumber-junit', version: "${cucumberVersion}"

    compile group: 'org.apache.commons', name: 'commons-io', version: '1.3.2'
    compile  group: 'com.paulhammant', name: 'ngwebdriver', version: '1.1.4'

    compile group: 'com.aventstack', name: 'extentreports', version: '4.0.9'
    compile group: 'com.vimalselvam', name: 'cucumber-extentsreport', version: '3.0.2'

    //add dependencies for downloading browser drivers if an artifactory exists
}

test {
    include '**/runner/*'
}

task executeTests(type: JavaExec) {
    String stringTagsToBeRun = System.getProperty("TAGS_TO_BE_RUN") == null ? "@smoketest" : System.getProperty("TAGS_TO_BE_RUN")
    def tagsToBeRun = []
    stringTagsToBeRun.split('"').each { splitString ->
        if (splitString.contains('@')) {
            tagsToBeRun << '--tags'; tagsToBeRun << splitString
        }
    }
    if (!tagsToBeRun.contains("@ignore")) tagsToBeRun = tagsToBeRun + '--tags' + '~@ignore'
    classpath = project.sourceSets.main.runtimeClasspath + project.sourceSets.main.resources + project.sourceSets.test.runtimeClasspath + project.files('./src/test/resources')
    def cp = classpath.getFiles().collect { it.absolutePath }.join(File.pathSeparator)
    environment "CLASSPATH", cp
    classpath = classpath.filter { false }
    def params = tagsToBeRun + ["--plugin", "json:./test-results/cucumberJson.json",
                                "--plugin", "junit:./test-results/cucumberJunit.xml",
                                "--glue", "com.personio",
                                "--plugin", "com.cucumber.listener.ExtentCucumberFormatter:test-results/cucumber-reports/report.html",
                                "--plugin", "rerun:./test-results/rerun.txt",
                                "./src/test"]
    args(params)
    main = 'cucumber.api.cli.Main'
}
